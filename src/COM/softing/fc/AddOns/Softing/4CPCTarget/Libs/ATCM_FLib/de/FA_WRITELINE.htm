<html>
<head>
<title>FA_WRITELINE</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="stylesheet" href="Lib.css"></head>

<body bgcolor="#FFFFCC">
<h2>FA_WRITELINE </h2>
<p>Schreibt eine Zeile in eine Datei.</p>
<h3>Schnittstelle</h3>
<pre class="preforma">FUNCTION_BLOCK FA_WRITELINE
VAR_INPUT
    EXEC        : BOOL;         
    FILENAME    : WSTRING;      
    TOUT        : TIME;         
    DATA        : WSTRING;      
END_VAR
VAR_IN_OUT
    POSITION    : DINT;         
END_VAR
VAR_OUTPUT
    DONE        : BOOL;         
    ERROR       : BOOL;
    ERRCD       : DINT;
    ERRTXT      : WSTRING;
END_VAR</pre>
<h3>Parameter</h3>
<h3>INPUT</h3>
<dl> 
  <dt><b>EXEC</b></dt>
  <dd>Wert vom Typ <i><b>BOOL</b></i><br>
    Startet die Operation bei steigender Flanke.</dd>
  <dt><b>FILENAME</b></dt>
  <dd>Wert vom Typ <i><b>WSTRING</b></i><br>
    Spezifiziert den Namen der Datei, in die eine Zeile geschrieben werden soll. 
    Der Dateiname kann einschlie&szlig;lich des voll qualifizierten Pfads angegeben 
    werden. Wird kein Pfad spezifiziert, wird intern das Standard-Arbeitsverzeichnis 
    von ATCMControl als Pfad erg&auml;nzt. Das Standard-Arbeitsverzeichnis ist das 
    Verzeichnis <font face="Courier New, Courier, mono">data</font> direkt unterhalb 
    des ATCMControl-Installationsverzeichnisses. </dd>
  <dt><b>TOUT</b></dt>
  <dd>Wert vom Typ <i><b>TIME</b></i><br>
    Definiert die Zeitdauer, w&auml;hrend der die Ausf&uuml;hrung des Lesevorgangs 
    versucht wird. Nach Ablauf dieses Zeitraums, wird der Versuch, aus der Datei 
    zu lesen, abgebrochen. <br>
    Standardwert ist T#0ms. Bei einer Initialisierung mit diesem Wert wird kein 
    Timeout gesetzt, d.h. der Zeitraum, w&auml;hrend dessen versucht wird, eine 
    Dateioperation auszuf&uuml;hren, wird nicht &uuml;berwacht. </dd>
  <dt><b>DATA</b></dt>
  <dd>Wert vom Typ <i><b>WSTRING</b></i><br>
  </dd>
  <dd>Spezifiziert die zu schreibende Zeile.</dd>
</dl>
<h3>IN_OUT</h3>
<dl> 
  <dt><b>POSITION</b></dt>
  <dd>Wert vom Typ <i><b>DINT</b></i><br>
    Startposition f&uuml;r den Lesezugriff. Nach Beendigung der Leseoperation 
    wird <i><b>POSITION</b></i> eine Byte hinter den zuletzt geschriebenen Wert 
    gesetzt. Die erste g&uuml;ltigeSchreibposition ist 0. <br>
    F&uuml;r Beginn und Ende einer Datei sowie das Ende einer Zeile sind <a href="Const_Pos.htm">Positions-Konstanten</a> 
    definiert. </dd>
</dl>
<h3>OUTPUT</h3>
<dl> 
  <dt><b>DONE</b></dt>
  <dd>Wert vom Typ <i><b>BOOL</b></i><br>
    Signalisiert den (erfolgreichen oder gescheiterten) Abschlu&szlig; der Operation.<br>
    M&ouml;gliche Werte:<br>
    <i><b>TRUE</b></i>: Operation ist abgeschlossen.<br>
    <i><b>FALSE</b></i>: Operation ist noch nicht abgeschlossen.</dd>
  <dt><b>ERROR</b></dt>
  <dd>Wert vom Typ <i><b>BOOL</b></i><br>
    Signalisiert den Fehlerstatus.<br>
    M&ouml;gliche Werte:<br>
    <i><b>TRUE</b></i>: Ein Fehler ist aufgetreten.<br>
    <i><b>FALSE</b></i>: Es ist kein Fehler aufgetreten.</dd>
  <dt><b>ERRCD</b></dt>
  <dd>Wert vom Typ <i><b>DINT</b></i><br>
    Enth&auml;lt eine Fehlernummer, falls ein Fehler aufgetreten ist. <br>
    Ist kein Fehler aufgetreten, hat <i><b>ERRCD</b></i> den Wert <b>0</b>.<br>
  </dd>
  <dd>M&ouml;gliche Werte sind in den <a href="Const_Error.htm">Fehlerkonstanten</a> 
    definiert. </dd>
  <dt><b>ERRTXT</b></dt>
  <dd>Wert vom Typ <i><b>WSTRING</b></i><br>
    Enth&auml;lt einen Fehlertext, falls ein Fehler aufgetreten ist. <br>
    Ist kein Fehler aufgetreten, enth&auml;lt <i><b>ERRTXT</b></i> einen Leerstring.</dd>
</dl>
<h3>Beschreibung</h3>
<p>Der Aufruf einer Instanz von<b><i> FA_WRITELINE</i></b> schreibt den an <i><b>DATA</b></i> 
  &uuml;bergebenen String in die an <i><b>FILE</b></i> &uuml;bergebene Datei. 
  W&auml;hrend des Schreibzugriffs wird ein kompletter Zugriffszyklus durchlaufen. 
</p>
<p>Die Startposition des Schreibzugriffs wird in <i><b>POSITION</b></i> festgelegt. 
  <i> <b>POSITION</b></i> repr&auml;sentiert den Dateizeiger, der die aktuelle 
  Schreibposition markiert. </p>
<p>Nach dem Abschlu&szlig; einer Schreiboperation wird <i><b>POSITION</b></i> 
  automatisch auf ein Byte hinter der zuletzt geschriebenen Zeile gesetzt. Es 
  ist auf diese Weise m&ouml;glich in sequentiell aufeinanderfolgenden Schreibzugriffen 
  Zeile f&uuml;r Zeile aneinanderzuh&auml;ngen, ohne <i> <b>POSITION</b></i> jedesmal 
  neu zu initialisieren. Dazu wird <i><b>POSITION</b></i> beim ersten Aufruf von 
  <i><b>FA_WRITELINE </b></i>eine Variable zugewiesen, die bei jedem folgenden 
  Aufruf einer Instanz von <i><b>FA_WRITELINE </b></i> wieder an deren Instanzvariable 
  <i> <b>POSITION</b></i> zugewiesen wird. Die Endposition des vorausgehenden 
  Schreibzugriffs wird dadurch zur Startposition des folgenden Schreibzugriffs.</p>
<p>Die zu schreibende Datei wird im Textmodus ge&ouml;ffnet.</p>
</body>
</html>
