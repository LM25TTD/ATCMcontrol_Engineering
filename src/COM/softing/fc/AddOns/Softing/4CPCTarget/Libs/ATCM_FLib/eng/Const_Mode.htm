<html>
<head>
<title>Access mode constants</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="stylesheet" href="Lib.css">
</head>


<body bgcolor="#FFFFCC">
<h2>Access Mode Constants</h2>
<p>Constants for the mode of access to an open or newly created file. </p>
<table border="1">
  <tr> 
    <td valign="top"><b>Constant</b> </td>
    <td valign="top"><b>Numeric value</b></td>
    <td valign="top"><b>File pointer position</b></td>
    <td valign="top"><b>Description</b></td>
  </tr>
  <tr> 
    <td valign="top"><b><a name="Read"></a>CFA_READ</b> </td>
    <td valign="top" align="center">2</td>
    <td valign="top" align="center">Beginning of file<br>
      0 = FIO_BOF</td>
    <td valign="top">The file is opened for read-only access. Other tasks or other 
      users are permitted to access this file. If this file does not exist, an 
      error is generated.</td>
  </tr>
  <tr> 
    <td valign="top"><b><a name="ReadWrite"></a>CFA_READ_WRITE</b></td>
    <td valign="top" align="center">6</td>
    <td valign="top" align="center">Beginning of file<br>
      0 = FIO_BOF</td>
    <td valign="top">The file is opened for read and write access. If the file 
      does not exist, it is created. Other tasks or other users are permitted 
      to access this file.</td>
  </tr>
  <tr> 
    <td valign="top"><b><a name="Append"></a>CFA_APPEND</b></td>
    <td valign="top" align="center">7</td>
    <td valign="top" align="center">End of file<br>
      -1 = CFA_EOF</td>
    <td valign="top">The file is opened for read and write access. If the file 
      does not exist, it is created. Other tasks or other users are permitted 
      to access this file.</td>
  </tr>
</table>
<h3>Description</h3>
<p>The access mode constants are assigned to the <i><b>MODE</b></i> parameter 
  of the <a href="FA_ASYNC_FILE.htm"><b><i>FA_ASYNC_FILE</i></b></a> or <a href="FA_SYNC_FILE.htm"><b><i>FA_SYNC_FILE</i></b></a> 
  structures which each represent a file object. This parameter always needs to 
  be set for the file object passed to these blocks before an access cycle is 
  initialized with <a href="FA_ASYNC_OPENFILE.htm"><b><i>FA_ASYNC_OPENFILE</i></b></a> 
  or <i><b><a href="FA_SYNC_OPENFILE.htm">FA_SYNC_OPENFILE</a></b></i>. </p>
<p>With the <i><b>MODE</b></i> parameter you define the access authorization for 
  a file. If the parameter <i><b>MODE</b></i> of a file object was initialized, 
  for example, with the value <i> <b>CFA_READ</b></i> before being passed to <i><b>FA_ASYNC_OPENFILE</b></i>, 
  access to this file object is read-only. A write access will generate an error. 
</p>
<p>An access mode set in <i><b>MODE</b></i> is effective only if it was set for 
  the passed file object <u>before being passed</u> to <i><b>FA_ASYNC_OPENFILE</b></i> 
  or <i><b>FA_SYNC_OPENFILE</b></i>. An access mode set in the initialization 
  of an access cycle is effective for the duration of a complete access cycle. 
  Changes to the value of <i><b>MODE</b></i> within an access cycle thus have 
  no effect. To allow write access to a file opened with<i><b> CFA_READ</b></i> 
  for read-only access after this file has been read, the file therefore needs 
  to be closed first and then reopened after changing the <i> <b>MODE</b></i> 
  parameter of the file object. </p>
<p>The access mode also defines the position of the file pointer after opening 
  a file.</p>
<p>To the access mode constants <i><b>CFA_READ</b></i> and <i><b>CFA_READ_WRITE</b></i> 
  the value <a href="Const_Pos.htm#bof"><i><b>CFA_BOF</b></i></a> is assigned. 
  On opening a file, this value causes the file pointer to be positioned at the 
  beginning of the file. </p>
<p>When opening a file for read and write access with 
        the access mode <i><b>CFA_READ_WRITE</b></i>, please note that the file 
        pointer will also always be located at the beginning of file if an existing 
        file has been opened. A write access performed immediately on opening 
        the file therefore always overwrites the contents of the opened file up 
        to the position of the newly written contents. To add contents to a file 
        that has been opened with <i><b>CFA_READ_WRITE</b></i> without overwriting 
        existing contents, you therefore need to place the file pointer at the 
        end of file <u>before the write access</u>. This is done by setting the 
        parameter <i><b>POSITION</b></i> of the structure instance (of <i><b>FA_SYNC_FILE</b></i> 
        or <i><b>FA_ASYNC_FILE</b></i>) that represents the file to <i><b><a href="Const_Pos.htm#eof">CFA_EOF</a></b></i>. 
      <p>
  <p> To the access mode constant <i><b>CFA_APPEND </b></i>the value <a href="Const_Pos.htm#eof"><b><i>CFA_EOF</i></b></a> 
    is assigned. On opening a file, this value causes the file pointer to be positioned 
    at the end of the file. A write access performed immediately on opening the 
    file therefore always appends new data to the end of the file without overwriting 
    existing data. </p>
  <p>The file pointer position that is set with the definition of the access mode 
    when a file is opened overwrites the value of the structure element <i><b>POSITION</b></i> 
    of a structure instance of <i><b><a href="FA_ASYNC_FILE.htm">FA_ASYNC_FILE</a></b></i> 
    or <i><b><a href="FA_SYNC_FILE.htm">FA_SYNC_FILE</a></b></i>. On opening a file, 
    the file pointer therefore is always set to the position that is defined by 
    the access mode, regardless of the value that has been set in <i><b>POSITION</b></i> 
    in the structure instance passed to the opening block. If a file operation 
    is to be executed explicitly at a specific file position, the value of <i><b>POSITION</b></i> 
    therefore must be newly set after the file has been opened. </p>

</body>
</html>
