<html>
<head>
<title>FA_ASYNC_OPENFILE</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="stylesheet" href="Lib.css">
</head>


<body bgcolor="#FFFFCC">
<h2>FA_ASYNC_OPENFILE</h2>
<p>Opens a file for editing.</p>
<h3>Interface</h3>
<pre class="preforma">FUNCTION_BLOCK FA_ASYNC_OPENFILE
VAR_INPUT
    EXEC        : BOOL;
END_VAR
VAR_IN_OUT
    FILE        : FA_ASYNC_FILE;    
END_VAR
VAR_OUTPUT
    DONE        : BOOL;
    ERROR       : BOOL;
    ERRCD       : DINT;
    ERRTXT      : WSTRING;
END_VAR</pre>
<h3>Parameter</h3>
<h3>INPUT</h3>
<dl> 

 <dt><b>EXEC</b></dt>

 <dd>Value of the type <i><b>BOOL</b></i><br> Starts the operation at a rising edge.</dd>
</dl>
<h3>IN_OUT</h3>
<dl> 

 <dt><b><a name="File"></a>FILE</b></dt>

  <dd>Instance of the <a href="FA_ASYNC_FILE.htm"><i><b>FA_ASYNC_FILE</b></i></a> 
    structure<br>
     File object on which the operation is performed.</dd>
</dl>
<h3>OUTPUT</h3>
<dl> 

 <dt><b>DONE</b></dt>

 <dd>Value of the type <i><b>BOOL</b></i>.<br> Signalizes the (successful or failed) conclusion of the operation.<br> Possible values:<br> <i><b>TRUE</b></i>: Operation has been concluded.<br> <i><b>FALSE</b></i>: Operation has not yet been concluded.</dd>

 <dt><b>ERROR</b></dt>

 <dd>Value of the type <i><b>BOOL</b></i>.<br> Signalizes the error status.<br> Possible values:<br> <i><b>TRUE</b></i>: An error has occurred.<br> <i><b>FALSE</b></i>: No error has occurred.</dd>

 <dt><b>ERRCD</b></dt>

 <dd>Value of the type <i><b>DINT</b></i>.<br> Contains an error number if an error has occurred. <br> If no error has occurred, <i><b>ERRCD</b></i> has the value <b>0</b>.<br>

 </dd>

 <dd>The possible values are defined in the <a href="Const_Error.htm">error constants</a>. </dd>

 <dt><b>ERRTXT</b></dt>

 <dd>Value of the type <i><b>WSTRING</b></i>.<br> Contains an error text if an error has occurred. <br> If no error has occurred, <i><b>ERRTXT</b></i> contains an empty string.</dd>
</dl>
<h3><a name="Description"></a>Description</h3>
<p><b><i>FA_ASYNC_OPENFILE</i></b><i><b> </b></i>opens the file passed to <i><b>FILE</b></i> 
  for read-only access or read and write access. <i><b>FA_ASYNC_OPENFILE </b></i>initiates 
  an access cycle and therefore must always be called before a read or write access 
  can be executed via other function block instances of the group of blocks for 
  elementary asynchronous file operations. </p>
<p>The file to be opened is represented by an instance of the <a href="FA_ASYNC_FILE.htm"><i><b>FA_ASYNC_FILE</b></i></a> 
  structure. This structure contains the <b><i>MODE</i></b> element with which 
  you define the access mode a file is to be opened with. The possible values 
  are defined in the <a href="Const_Mode.htm">access mode constants</a>. </p>
<p>Before you open a file, you need to set the access mode in the structure instance 
  of <i><b>FA_ASYNC_FILE</b></i> passed to <i><b>FA_ASYNC_OPENFILE</b></i>. The 
  access mode set during opening remains in effect until the file is closed again 
  with <i><b>FA_ASYNC_CLOSEFILE</b></i>. All function block instances which are 
  called between the opening and closing of a file and which work on the file 
  object passed to <i><b>FA_ASYNC_OPENFILE</b></i> are subject to the access authorizations 
  that have been set in <i><b>MODE</b></i> when opening the file. Changing the 
  access mode during an access cycle is therefore not possible. </p>
<p>When a file is opened, the position of th file pointer always depends on the 
  access mode, which is set in the instance of <i><b>FA_ASYNC_FILE</b></i> passed 
  to <i><b>FA_ASYNC_OPENFILE</b></i>. When opening a file with <i><b>FA_ASYNC_OPENFILE</b></i>, 
  an initialization of the element variable <i><b><a href="FA_ASYNC_FILE.htm#Position">POSITION</a></b></i> 
  of the <i><b>FA_ASYNC_FILE</b></i> structure with a user-defined value is overwritten 
  by the value that is assigned to the corresponding access mode. If a file access 
  is to be executed at a specific position after having opened the file, you therefore 
  need to explicitly set the value of <i><b>POSITION</b></i> anew <u>after opening</u>. 
</p>
<p>&nbsp; </p>
</body>
</html>
