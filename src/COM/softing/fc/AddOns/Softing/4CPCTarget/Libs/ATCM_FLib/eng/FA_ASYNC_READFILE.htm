<html>
<head>
<title>FA_ASYNC_READFILE</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="stylesheet" href="Lib.css">
</head>


<body bgcolor="#FFFFCC">
<h2>FA_ASYNC_READFILE</h2>
<p>Reads a byte string from a file.</p>
<h3>Interface</h3>
<pre class="preforma">FUNCTION_BLOCK FA_ASYNC_READFILE
VAR_INPUT
    EXEC        : BOOL;
END_VAR
VAR_IN_OUT
    FILE        : FA_ASYNC_FILE;    
    LENGTH      : DINT;
END_VAR
VAR_OUTPUT
    DATA        : BYTE_STRING;     
    DONE        : BOOL;
    ERROR       : BOOL;
    ERRCD       : DINT;
    ERRTXT      : WSTRING;
END_VAR</pre>
<h3>Parameter</h3>
<h3>INPUT</h3>
<dl> 

 <dt><b>EXEC</b></dt>

 <dd>Value of the type <i><b>BOOL</b></i><br> Starts the operation at a rising edge.</dd>
</dl>
<h3>IN_OUT</h3>
<dl> 

 <dt><b><a name="File"></a>FILE</b></dt>

  <dd>Instance of the <a href="FA_ASYNC_FILE.htm"><i><b>FA_ASYNC_FILE</b></i></a> 
    structure<br>
     File object on which the operation is performed.</dd>

 <dt><b><a name="File"></a>LENGTH</b></dt>

 <dd>Value of the type <i><b>DINT</b></i><br> Before access: Length in bytes of the file block to be read. <br> After access: Length in bytes of the file block read.</dd>
</dl>
<h3>OUTPUT</h3>
<dl> 

 <dt><b>DATA</b></dt>

  <dd>Instance of the <i><b>BYTE_STRING</b></i> structure<br>
     Contains the read bytes on conclusion of the reading operation.</dd>

 <dt><b>DONE</b></dt>

 <dd>Value of the type <i><b>BOOL</b></i><br> Signalizes the (successful or failed) conclusion of the operation.<br> Possible values:<br> <i><b>TRUE</b></i>: Operation has been concluded.<br> <i><b>FALSE</b></i>: Operation has not yet been concluded.</dd>

 <dt><b>ERROR</b></dt>

 <dd>Value of the type <i><b>BOOL</b></i><br> Signalizes the error status.<br> Possible values:<br> <i><b>TRUE</b></i>: An error has occurred.<br> <i><b>FALSE</b></i>: No error has occurred.</dd>

 <dt><b>ERRCD</b></dt>

 <dd>Value of the type <i><b>DINT</b></i><br> Contains an error number if an error has occurred. <br> If no error has occurred, <i><b>ERRCD</b></i> has the value <b>0</b>.<br>

 </dd>

 <dd>The possible values are defined in the <a href="Const_Error.htm">error constants</a>. </dd>

 <dt><b>ERRTXT</b></dt>

 <dd>Value of the type <i><b>WSTRING</b></i><br> Contains an error text if an error has occurred. <br> If no error has occurred, <i><b>ERRTXT</b></i> contains an empty string.</dd>
</dl>
<h3>Description</h3>
<p><i><b>FA_ASYNC_READFILE</b></i> reads a block of the length defined in <i><b>LENGTH</b></i> 
  from the file passed to <i><b>FILE</b></i>. Before reading a file, the file 
  must be opened with <i><b><a href="FA_ASYNC_OPENFILE.htm">FA_ASYNC_OPENFILE</a></b></i>. 
</p>
<p>The file pointer which indicates the current read position is represented by 
  the structure variable <i> <b>POSITION</b></i> of the structure instance of 
  <i><b>FA_ASYNC_FILE</b></i> passed to <i><b>FILE</b></i>. </p>
<p>After opening a file, the file pointer is always set to the position defined 
  by the <a href="Const_Mode.htm">access mode</a> when opening the file. A subsequent 
  read access is therefore always performed at the position defined by the access 
  mode unless the file pointer has been explicitly set to a different position 
  (see next paragraph). After each read access, the value of <i><b>POSITION</b></i> 
  is automatically set to a position directly after the last byte read. This allows 
  you to sequentially read out a file without having to explicitly set the file 
  pointer to the new position. If the file pointer is placed at the end of file, 
  <i><b>POSITION</b></i> has the value -1 or <a href="Const_Pos.htm#eof"><i><b>CFA_EOF</b></i></a>.</p>
<p>The read data are stored in the <i><b>BYTE_STRING</b></i> instance <i><b>DATA</b></i> 
  which is automatically generated when <i><b>FA_ASYNC_READFILE</b></i> is called. 
  To convert and evaluate the byte string stored in <i><b>DATA</b></i>, use the 
  conversion function <i><b>COPY_WSTRING_FROM_BYTE_STRING</b></i>. </p>
<div style="margin-left: 5; position: relative; top: 0"></div>
</body>
</html>
