<html>
<head>
<title>FA_READLINE</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="stylesheet" href="Lib.css"></head>


<body bgcolor="#FFFFCC">
<h2>FA_READLINE</h2>
<p>Reads a line from a file.</p>
<h3>Interface</h3>
<pre class="preforma">FUNCTION_BLOCK FA_READLINE
VAR_INPUT
    EXEC        : BOOL;
    FILENAME    : WSTRING;
    TOUT        : TIME;
END_VAR
VAR_IN_OUT
    POSITION    : DINT;
END_VAR
VAR_OUTPUT
    DATA        : WSTRING;
    DONE        : BOOL;
    ERROR       : BOOL;
    ERRCD       : DINT;
    ERRTXT      : WSTRING;
END_VAR</pre>
<h3>Parameter</h3>
<h3>INPUT</h3>
<dl> 

 <dt><b>EXEC</b></dt>

 <dd>Value of the type <i><b>BOOL</b></i><br> Starts the operation at a rising edge.</dd>

 <dt><b>FILENAME</b></dt>

 <dd>Value of the type <i><b>WSTRING</b></i><br> Specifies the name of the file to be read. The file name can be entered together with the fully qualified path, e.g. &quot;<font face="Courier New, Courier, mono">D:\Projects\Tests</font>&quot;. 

   If no path is specified, the standard working directory of ATCMControl is internally added as the path. The standard working directory is the directory <font face="Courier New, Courier, mono">data</font> directly under the ATCMControl installation directory. 

 </dd>

 <dt><b>TOUT</b></dt>

 <dd>Value of the type <i><b>TIME</b></i><br> Defines the length of time during which the execution of the reading process is to be attempted. On expiry of this period of time, the attempt to read from the file will be aborted. <br> The default value is T#0ms. In an initialization with this value no timeout is set. This means that the length of time during which the execution of a file operation is attempted is not monitored. </dd>
</dl>
<h3>IN_OUT</h3>
<dl> 

 <dt><b><a name="File"></a>POSITION</b></dt>

 <dd>Value of the type <i><b>DINT</b></i><br> Starting position for the read access. On conclusion of the reading operation, <i><b>POSITION</b></i> is set to the byte following the last value read. 

   The first valid reading position is 0. <br> <a href="Const_Pos.htm">Position constants</a> are defined for the beginning and end of a file and for the end of a line. </dd>
</dl>
<h3>OUTPUT</h3>
<dl> 

 <dt><b>DATA</b></dt>

 <dd>Value of type<i><b> WSTRING</b></i><br>

 </dd>

 <dd>Contains the read line on conclusion of the reading operation.</dd>

 <dt><b>DONE</b></dt>

 <dd>Value of the type <i><b>BOOL</b></i><br> Signalizes the (successful or failed) conclusion of the operation.<br> Possible values:<br> <i><b>TRUE</b></i>: Operation has been concluded.<br> <i><b>FALSE</b></i>: Operation has not yet been concluded.</dd>

 <dt><b>ERROR</b></dt>

 <dd>Value of the type <i><b>BOOL</b></i><br> Signalizes the error status.<br> Possible values:<br> <i><b>TRUE</b></i>: An error has occurred.<br> <i><b>FALSE</b></i>: No error has occurred.</dd>

 <dt><b>ERRCD</b></dt>

 <dd>Value of the type <i><b>DINT</b></i><br> Contains an error number if an error has occurred. <br> If no error has occurred, <i><b>ERRCD</b></i> has the value <b>0</b>.<br>

 </dd>

 <dd>The possible values are defined in the <a href="Const_Error.htm">error constants</a>. </dd>

 <dt><b>ERRTXT</b></dt>

 <dd>Value of the type <i><b>WSTRING</b></i><br> Contains an error text if an error has occurred. <br> If no error has occurred, <i><b>ERRTXT</b></i> contains an empty string.</dd>
</dl>
<h3>Description</h3>
<p><b><i>FA_READLINE </i></b>reads a line from the file passed to <i><b>FILENAME</b></i>, 
  starting from the position specified in <i><b>POSITION</b></i>. The read line 
  is stored in <i><b>DATA</b></i> as a <i><b>WSTRING</b></i>. During the read 
  access one complete access cycle is executed. </p>
<p>The starting position of the read access is defined in <i><b>POSITION</b></i>. 

 <i> <b>POSITION</b></i> represents the file pointer which indicates the current reading position. </p>
<p>On conclusion of a reading operation, <i><b>POSITION</b></i> is automatically set to the byte following the last line read. This allows you to perform read access line by line several times in succession without reinitializing <i> <b>POSITION</b></i> anew each time. For this purpose, you assign <i><b>POSITION</b></i> a variable when calling <i><b>FA_READLINE</b></i> for the first time. In each subsequent call of <i><b>FA_READLINE</b></i>, the variable is then reassigned to its instance variable <i> <b>POSITION</b></i>. The end position of the preceding read access thus becomes the starting position of the subsequent read access. If the file pointer is placed at the end of file, <i><b>POSITION</b></i> has the value -1 or <a href="Const_Pos.htm#eof"><i><b>CFA_EOF</b></i></a>. </p>
<p>The file to be read is opened in text mode.</p>
</body>
</html>
