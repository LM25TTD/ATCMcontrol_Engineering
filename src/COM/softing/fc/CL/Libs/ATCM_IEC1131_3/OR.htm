<html>
<head>
<title>OR</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="stylesheet" href="Lib.css"></head>

<body bgcolor="#FFFFCC">
<h2>OR</h2>
<p>Combines the values delivered as actual parameters with bitwise <b><i>OR</i></b>.<br>
</p>
<h3>Interface definition</h3>
<pre class="preforma">FUNCTION OR : ANY_BIT
VAR_INPUT 
    IN1 : ANY_BIT; 
END_VAR
VAR_IN_EXT 
    IN2 : ANY_BIT; 
END_VAR</pre>
<h3>Return value</h3>
<p>Value of type <i><b>ANY_BIT</b></i><br>
  Yields the value resulting from combining the actual parameters.</p>

<h3>Parameters</h3>
<h3>INPUT</h3>
<dl> 
  <dt><b>IN1</b></dt>
  <dd>Value of type <b><i>ANY_BIT</i></b><br>
    Value to be combined.</dd>
  <dt><b>IN2</b></dt>
  <dd>Value of type <b><i>ANY_BIT</i></b><br>
    Value to be combined. <br>
    <i><b>IN_EXT</b></i>-variables are extensible. Optionally, further values 
    can be stated to be combined.<br>
  </dd>
</dl>
<h3>Description</h3>
<p>The function <i><b>OR</b></i> corresponds to the operators for bitwise <b><i>OR</i></b>. 
  With a bitwise <i><b>OR</b></i>, the operands are combined in such a way that, 
  as the result of the operation, no bit is set at a position only if there is 
  no bit set at the corresponding positions of <u>both</u> operands. The bitwise 
  <i> <b>OR</b></i> can thus be used, by means of a bit mask placed over the bit 
  pattern of an output value, for precisely setting a bit at the desired bit position 
  if it had not been set before.</p>
</body>
</html>
