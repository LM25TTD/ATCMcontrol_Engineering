/*H>> $Header: /4CReleased/V2.20.00/COM/softing/fc/CSC/CSC_simpleOPC/CSC_simpleOPC.idl 1     28.02.07 19:00 Ln $
 *----------------------------------------------------------------------------*
 *
 * =FILENAME            $Workfile: CSC_simpleOPC.idl $
 *                      $Logfile: /4CReleased/V2.20.00/COM/softing/fc/CSC/CSC_simpleOPC/CSC_simpleOPC.idl $
 *
 * =PROJECT             CAK1020  ATCMControl V2.0
 *
 * =SWKE                4CSC
 *
 * =COMPONENT           simple sync OPC client
 *
 * =CURRENT             $Date: 28.02.07 19:00 $
 *                      $Revision: 1 $
 *
 * =ENVIRONMENT         MS Windows NT 4.0 / MS Windows 2000
 *                      MSVC++ V6.0
 *                      MS Java 3.2
 *                      MS Visual SourceSafe 6.0
 *                      Perl5
 *
 * =REFERENCES
 *==
 *----------------------------------------------------------------------------*
 *

 

 

 *==
 *
 *----------------------------------------------------------------------------*
 * =DESCRIPTION
 *==
 *----------------------------------------------------------------------------*
 * =MODIFICATIONS
 * $History: CSC_simpleOPC.idl $
 * 
 * *****************  Version 1  *****************
 * User: Ln           Date: 28.02.07   Time: 19:00
 * Created in $/4CReleased/V2.20.00/COM/softing/fc/CSC/CSC_simpleOPC
 * 
 * *****************  Version 1  *****************
 * User: Ln           Date: 28.08.03   Time: 16:33
 * Created in $/4Control/COM/softing/fc/CSC/CSC_simpleOPC
 * 
 * *****************  Version 2  *****************
 * User: Ed           Date: 9/03/01    Time: 3:23p
 * Updated in $/4Control/COM/softing/fc/CSC/CSC_simpleOPC
 * handle session password
 * 
 * *****************  Version 1  *****************
 * User: Ca           Date: 8.08.01    Time: 9:59
 * Created in $/4Control/COM/softing/fc/CSC/CSC_simpleOPC
 * copied from V1.3
 *==
 ******************************************************************************
H<<*/

cpp_quote("//+-------------------------------------------------------------------------")
cpp_quote("//")
cpp_quote("//  ATCMCONTROL XXXX(SWKE)")
cpp_quote("//  ATCM.")
cpp_quote("//")
cpp_quote("//--------------------------------------------------------------------------")



// CSC_simpleOPC.idl : IDL source for CSC_simpleOPC.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (CSC_simpleOPC.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";
	[
		object,
		uuid(D8BA2C11-8B10-11d5-8798-00010209D2BC),
		dual,
        oleautomation,
		helpstring("ISyncAccess Interface"),
		pointer_default(unique)
	]
	interface ISyncAccess : IDispatch
	{
		//Standard Server Side Component Methods
		HRESULT OnStartPage([in] IUnknown* piUnk);
		HRESULT OnEndPage();	
		[id(1), helpstring("method Subscribe")]
            HRESULT Subscribe([in, string] BSTR sItem);
		[id(2), helpstring("method Unsubscribe")]
            HRESULT Unsubscribe([in, string] BSTR sItem);
		[propget, id(3), helpstring("property Value")]
            HRESULT Value([in, string] BSTR sItem, [out, retval] VARIANT *pVal);
		[propput, id(3), helpstring("property Value")]
            HRESULT Value([in, string] BSTR sItem, [in] VARIANT newVal);
		[id(4), helpstring("method SubscribeStringList")] HRESULT SubscribeStringList([in,string] BSTR sItems, [in,string] BSTR sCommonPath);
		[id(5), helpstring("method UnsubscribeStringList")] HRESULT UnsubscribeStringList([in,string] BSTR sItems, [in,string] BSTR sCommonPath);
		[id(6), helpstring("method ReadStringList")] HRESULT ReadStringList([in, string] BSTR sItems, [in,string] BSTR sCommonPath, [out,string,retval] BSTR *psValues);
		[id(7), helpstring("method ReadStringListTyped")] HRESULT ReadStringListTyped([in, string] BSTR sItems, [in,string] BSTR sCommonPath, [out,string,retval] BSTR *psValues);
		[id(8), helpstring("method Write")] HRESULT Write([in,string] BSTR sItem, [in] VARIANT newVal);
		[id(9), helpstring("method ReadCachedStringListTyped")] HRESULT ReadCachedStringListTyped([in, string] BSTR sItems, [in,string] BSTR sCommonPath, [out,string,retval] BSTR *psValues);

		[id(11), helpstring("method StartResource")]
            HRESULT StartResource([in,string] BSTR sFullResourcePath, [in,string] BSTR sPassword);
		[id(12), helpstring("method StopResource")]
            HRESULT StopResource([in,string] BSTR sFullResourcePath, [in,string] BSTR sPassword);
		[id(13), helpstring("method StartAllTasks")]
            HRESULT StartAllTasks([in,string] BSTR sFullResourcePath, [in,string] BSTR sPassword);
		[id(14), helpstring("method StopAllTasks")]
            HRESULT StopAllTasks([in,string] BSTR sFullResourcePath, [in,string] BSTR sPassword);
		[id(15), helpstring("method StartTask")]
            HRESULT StartTask([in,string] BSTR sFullTaskPath, [in,string] BSTR sPassword);
		[id(16), helpstring("method StopTask")]
            HRESULT StopTask([in,string] BSTR sFullTaskPath, [in,string] BSTR sPassword);
	};

    //-------------------------------------------------------------------------
    [
        object,
        uuid(D8BA2C12-8B10-11d5-8798-00010209D2BC),
        dual,
        oleautomation,
        helpstring("Script-language interface to transfer messages and error codes from 4CC error log"),
        pointer_default(unique)
    ]
    interface IFCMessageHistoryScripted : IDispatch
    {
        [id(1), helpstring("Connect a message session to given machine/control")]
            HRESULT Connect([in, string] BSTR sPassword);
        [id(2), helpstring("Disconnect message session from control")]
            HRESULT Disconnect();
        [propget, id(3), helpstring("Query for MachineName")]
            HRESULT MachineName([out, retval] BSTR *pVal);
        [propput, id(3), helpstring("set MachineName")]
            HRESULT MachineName([in, string] BSTR newVal);
        [propget, id(4), helpstring("query for ConfigName")]
            HRESULT ConfigName([out, retval] BSTR *pVal);
        [propput, id(4), helpstring("set ConfigName")]
            HRESULT ConfigName([in, string] BSTR newVal);
        [propget, id(5), helpstring("IsConnected returns TRUE if connection to control is established")]
            HRESULT IsConnected([out, retval] BOOL *pVal);

        [propget, id(6), helpstring("property MaxHistoryLength")]
            HRESULT MaxHistoryLength([in, string] BSTR sResource, [out, retval] long *pVal);
        [propput, id(6), helpstring("property MaxHistoryLength")]
            HRESULT MaxHistoryLength([in, string] BSTR sResource, [in] long newVal);
        [id(7), helpstring("method ClearHistoryBuffer")]
            HRESULT ClearHistoryBuffer([in, string] BSTR sResource);

        [propget, id(8), helpstring("property MinHistoryID")]
            HRESULT MinHistoryID([in, string] BSTR sResource, [out, retval] long *pVal);
        [propget, id(9), helpstring("property MaxHistoryID")]
            HRESULT MaxHistoryID([in, string] BSTR sResource, [out, retval] long *pVal);
        [propget, id(10), helpstring("property MsgText")]
            HRESULT MsgText([in, string] BSTR sResource, [in] long idHistory, [out, string, retval] BSTR *sMessage);
        [propget, id(11), helpstring("property MsgErrorNo")]
            HRESULT MsgErrorNo([in, string] BSTR sResource, [in] long idHistory, [out, retval] HRESULT *hError);
        [propget, id(12), helpstring("property MsgDate")]
            HRESULT MsgDate([in, string] BSTR sResource, [in] long idHistory, [out, retval] DATE *dt);
    };


[
	uuid(D8BA2C13-8B10-11d5-8798-00010209D2BC),
	version(1.0),
	helpstring("CSC_simpleOPC 1.0 Type Library")
]
library CSC_SIMPLEOPCLib
{
	importlib("stdole32.tlb");
	importlib("stdole2.tlb");

	[
		uuid(D8BA2C14-8B10-11d5-8798-00010209D2BC),
		helpstring("SyncAccess Class")
	]
	coclass SyncAccess
	{
		[default] interface ISyncAccess;
	};

    //-------------------------------------------------------------------------
    [
        uuid(D8BA2C15-8B10-11d5-8798-00010209D2BC),
        helpstring("FCMessageHistory Class")
    ]
    coclass FCMessageHistory
    {
        [default] interface IFCMessageHistoryScripted;
    };
};
